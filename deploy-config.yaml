---
kind: Template
apiVersion: v1
metadata:
  name: ${NAME}
  annotations:
    openshift.io/display-name: Node.js
    description: MSAuthorizaEntFraud Ecommerce V9
    tags: instalacion,install,nodejs
    iconClass: icon-nodejs
    openshift.io/long-description: Este microservicio analiza el riesgo al adquirir un plan
    openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/bindable: 'false'
message: |-
  Se han creado los siguientes servicios en su proyecto: ${NAME}.
labels:
  template: ${NAME}
  app: ${NAME}
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Expone y balancea la carga de los pods de aplicación.
  spec:
    ports:
    - name: #{Template.Port}#-tcp
      port: #{Template.Port}#
      protocol: TCP
      targetPort: #{Template.Port}#
    loadBalancerIP:
    type: LoadBalancer
    selector:
      name: "${NAME}"

- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Realiza un seguimiento de los cambios en la imagen de la aplicación.

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Define cómo construir la aplicación.
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    source:
      type: Binary
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
        pullSecret:
          name: "acr"
        env: 
        - name: "PORT"
          value: "#{Template.Port}#"
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Define cómo desplegar el servidor de aplicaciones.
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Rolling
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: "${MAX_SURGE}"
        maxUnavailable: "${MAX_UNAVAILABLE}"
        timeoutSeconds: 300
        updatePeriodSeconds: 1
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - ${NAME}
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
    - type: ConfigChange
    replicas: "${{MAX_REPLICAS}}"
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
      spec:
        containers:
        - name: ${NAME}
          image: ""
          ports:
            - containerPort: #{Template.Port}#
              protocol: "TCP"
          type: "Recreate"
          resources:
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
            requests: 
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
          env:
          - name: "PORT"
            value: "#{Template.Port}#"
          - name: "API_MAPPING"
            value: "#{Template.ApiMapping}#"
          - name: "PORAPI_VERSIONT"
            value: "#{Template.ApiVersion}#"
          - name: "PORAPI_ORIGIN"
            value: "#{Template.ApiOrigin}#"
          - name: "RISK_FRAUD_URL"
            value: "#{Template.riskFraudUrl}#"
          - name: "CONTROLLER"
            value: "#{Template.Controller}#"
          - name: "MONGO_URL"
            value: "#{Template.mongoUrl}#"
          - name: "URL_RISK_SERVICE"
            value: "#{Template.riskService}#"
          - name: "LOG_LEVEL"
            value: "#{Template.LogLevel}#"
          - name: "HTTP_TIMEOUT"
            value: "#{Template.HttpTimeOut}#"

- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    name: ${NAME}
  spec:
    scaleTargetRef:
      kind: DeploymentConfig 
      name: ${NAME}
      apiVersion: apps.openshift.io/v1 
      subresource: scale
    minReplicas: "${{MIN_REPLICAS}}" 
    maxReplicas: "${{MAX_REPLICAS}}"
    targetCPUUtilizationPercentage: "${{CPU_TARGET_AVERAGE_UTILIZATION}}"

parameters:
- name: NAME
  displayName: Name
  description: El nombre asignado a todos los objetos frontend definidos en esta plantilla.
  required: true
  value: #{Template.Name}#
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Cantidad máxima de memoria que puede utilizar el contenedor.
  required: true
  value: #{Template.MemoryLimit}#
- name: CPU_LIMIT
  displayName: CPU Limit
  description: Cantidad máxima de procesador que puede utilizar el contenedor.
  required: true
  value: #{Template.CpuLimit}#
- name: MIN_REPLICAS
  displayName: Minimo de Pods
  description: Cantidad minima de pods.
  required: true
  value: "#{Template.ReplicasMin}#"
- name: MAX_REPLICAS
  displayName: Maximo de Pods
  description: Cantidad maxima de pods.
  required: true
  value: "#{Template.ReplicasMax}#"
- name: CPU_TARGET_AVERAGE_UTILIZATION
  displayName: Porcentaje de la CPU solicitada 
  description: El porcentaje de la CPU solicitada que cada pod debería usar idealmente.
  required: true
  value: "#{Template.CpuTargetAverageUtilization}#"
- name: MAX_SURGE
  displayName: Max Oleada
  description: Número máximo de pods que se pueden programar por encima del número original de pods.
  required: true
  value: #{Template.MaxSurge}#
- name: MAX_UNAVAILABLE
  displayName: Max Disponibilidad 
  description: número máximo de pods que pueden no estar disponibles durante la actualización.
  required: true
  value: #{Template.MaxUnavailable}#
