trigger:
  - master
  - develop

variables:
  artifact_name: _ci-ms-template #MODIFICAR

pool:
  name: vsts-agent-test-20

jobs:
  - job: ContinuousIntegration
    steps:
      - task: NodeTool@0
        displayName: 'Select Node.js versi√≥n'
        inputs:
          versionSpec: '14.x'

      - script: |
          npm install
        displayName: 'Install dependencies'
        condition: succeeded()

      # - script: |
      #     npm run test:cov
      #   displayName: 'Running unit test'
      #   condition: succeeded()

      - script: |
          npm run build
        displayName: 'Build package code'
        condition: succeeded()

      - task: CopyFiles@2
        condition: succeeded()
        displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
        inputs:
          SourceFolder: '$(Build.sourcesdirectory)'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          Contents: |
            package.json
            deploy-config.yaml
            Dockerfile
            dist/**
            node_modules/**

      # - task: PublishTestResults@2
      #   displayName: 'Publish result JUNIT'
      #   condition: succeeded()
      #   inputs:
      #     testRunner: JUnit
      #     testResultsFiles: '$(System.DefaultWorkingDirectory)/coverage/test-report.xml'

      # - task: PublishCodeCoverageResults@1
      #   displayName: 'Publish coverage'
      #   condition: succeeded()
      #   inputs:
      #     codeCoverageTool: Cobertura
      #     summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml

      - task: ArchiveFiles@2
        displayName: 'Compress files: $(Build.ArtifactStagingDirectory)'
        inputs:
          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/'
          includeRootFolder: false
          archiveType: 'tar'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifact_name).tar'
          tarCompression: none
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/develop'))
        displayName: 'Publish Artifact: artifacts'
        inputs:
          ArtifactName: artifacts
          publishLocation: 'Container'
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(artifact_name).tar'
